{"version":3,"sources":["models/RecipeItem.tsx","models/Recipe.tsx","components/RecipeEditor.tsx","components/Brewer.tsx","App.tsx","theme.tsx","serviceWorker.ts","index.tsx"],"names":["RecipeItem","Coffee","Water","Ratio","Recipe","coffee","water","this","ratio","RecipeEditor","recipe","onRecipeChanged","useState","locks","setLocks","calculate","updateRecipe","item","value","updatedRecipe","key","keyItem","hasOwnProperty","lockerButton","IconButton","disabled","onClick","lock","color","Fragment","Typography","variant","Slider","min","max","onChange","_","marks","label","toFixed","step","useStyles","makeStyles","theme","createStyles","cardLeft","marginTop","spacing","marginRight","cardRight","maringLeft","stepper","borderRadius","sound","Audio","Brewer","time","setTime","Array","from","i","steps","setSteps","timer","setTimer","finished","setFinished","sortedSteps","sort","map","s","getTimer","setInterval","stepTime","play","killTimer","clearInterval","stepIndex","Math","floor","currentStep","previousStep","isLastStep","length","nextStep","currentPortion","nextPortion","classes","Set","size","values","aria-labelledby","Grid","container","xs","moment","unix","format","Button","LinearProgress","className","Stepper","activeStep","alternativeLabel","mark","index","Step","StepLabel","Card","CardContent","App","setRecipe","Container","maxWidth","Box","createMuiTheme","palette","primary","main","secondary","error","background","default","paper","text","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.aa4b65c9.chunk.js","sourcesContent":["export enum RecipeItem {\r\n    Coffee = 'coffee',\r\n    Water = 'water',\r\n    Ratio = 'ratio'\r\n}\r\n","import { RecipeItem } from './RecipeItem';\r\nexport class Recipe {\r\n    [RecipeItem.Coffee]: number;\r\n    [RecipeItem.Water]: number;\r\n    [RecipeItem.Ratio]: number;\r\n    constructor(coffee: number, water: number) {\r\n        this.coffee = coffee;\r\n        this.water = water;\r\n        this.ratio = water / coffee;\r\n    }\r\n}\r\n","import React, { useState } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Recipe } from '../models/Recipe';\r\nimport { RecipeItem } from '../models/RecipeItem';\r\n\r\nexport interface RecipeEditorProps {\r\n    recipe: Recipe;\r\n    onRecipeChanged: (recipe: Recipe) => void;\r\n}\r\n\r\nconst RecipeEditor: React.SFC<RecipeEditorProps> = ({ recipe, onRecipeChanged }) => {\r\n    const [locks, setLocks] = useState({\r\n        [RecipeItem.Coffee]: false,\r\n        [RecipeItem.Water]: false,\r\n        [RecipeItem.Ratio]: true\r\n    });\r\n\r\n    const calculate = {\r\n        [RecipeItem.Coffee]: () => recipe.water / recipe.ratio,\r\n        [RecipeItem.Water]: () => recipe.coffee * recipe.ratio,\r\n        [RecipeItem.Ratio]: () => recipe.water / recipe.coffee\r\n    };\r\n\r\n    const updateRecipe = (item: RecipeItem, value: number) => {\r\n        const updatedRecipe = { ...recipe };\r\n        for (const key in updatedRecipe) {\r\n            const keyItem = key as RecipeItem;\r\n            if (updatedRecipe.hasOwnProperty(key)) {\r\n                if (key === item) {\r\n                    updatedRecipe[keyItem] = value;\r\n                } else if (!locks[keyItem]) {\r\n                    updatedRecipe[keyItem] = calculate[keyItem]();\r\n                }\r\n            }\r\n        }\r\n\r\n        onRecipeChanged && onRecipeChanged(updatedRecipe);\r\n    };\r\n\r\n    const lock = (item: RecipeItem) => {\r\n        const locks = {\r\n            [RecipeItem.Coffee]: false,\r\n            [RecipeItem.Water]: false,\r\n            [RecipeItem.Ratio]: false\r\n        };\r\n        locks[item] = true;\r\n        setLocks(locks);\r\n    };\r\n\r\n    const lockerButton = (item: RecipeItem) => (\r\n        <IconButton disabled={locks[item]} onClick={() => lock(item)} color=\"primary\">\r\n            {locks[item] ? <LockIcon /> : <LockOpenIcon />}\r\n        </IconButton>\r\n    );\r\n    return (\r\n        <React.Fragment>\r\n            {/* Coffee */}\r\n            {lockerButton(RecipeItem.Coffee)}\r\n            <Typography variant=\"button\">Coffee</Typography>\r\n            <Slider\r\n                disabled={locks.coffee}\r\n                value={recipe.coffee}\r\n                min={1}\r\n                max={100}\r\n                onChange={(_, value) => updateRecipe(RecipeItem.Coffee, value as number)}\r\n                marks={[{ value: recipe.coffee, label: recipe.coffee.toFixed(1) + ' g' }]}\r\n            />\r\n            {/* Water */}\r\n            {lockerButton(RecipeItem.Water)}\r\n            <Typography variant=\"button\">Water</Typography>\r\n            <Slider\r\n                value={recipe.water}\r\n                disabled={locks.water}\r\n                min={10}\r\n                max={1000}\r\n                step={10}\r\n                onChange={(_, value) => updateRecipe(RecipeItem.Water, value as number)}\r\n                marks={[{ value: recipe.water, label: recipe.water.toFixed() + ' ml' }]}\r\n            />\r\n            {/* Ratio */}\r\n            {lockerButton(RecipeItem.Ratio)}\r\n            <Typography variant=\"button\">Ratio</Typography>\r\n            <Slider\r\n                value={recipe.ratio}\r\n                disabled={locks.ratio}\r\n                min={1}\r\n                max={25}\r\n                step={0.1}\r\n                onChange={(_, value) => updateRecipe(RecipeItem.Ratio, value as number)}\r\n                marks={[{ value: recipe.ratio, label: '1:' + recipe.ratio.toFixed(2) }]}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default RecipeEditor;\r\n","import React, { useState } from 'react';\r\nimport { Recipe } from '../models/Recipe';\r\nimport {\r\n    Typography,\r\n    Slider,\r\n    Mark,\r\n    Grid,\r\n    Card,\r\n    CardContent,\r\n    makeStyles,\r\n    createStyles,\r\n    Theme,\r\n    LinearProgress,\r\n    Stepper,\r\n    Step,\r\n    StepLabel\r\n} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport moment from 'moment';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        cardLeft: {\r\n            marginTop: theme.spacing(1),\r\n            marginRight: theme.spacing(1)\r\n        },\r\n        cardRight: {\r\n            marginTop: theme.spacing(1),\r\n            maringLeft: theme.spacing(1)\r\n        },\r\n        stepper: {\r\n            marginTop: theme.spacing(1),\r\n            borderRadius: 4\r\n        }\r\n    })\r\n);\r\nexport interface BrewerProps {\r\n    recipe: Recipe;\r\n}\r\n\r\nconst initialPortions = 5;\r\nconst stepTime = 45;\r\nconst sound = new Audio('bell.mp3');\r\nconst finishTime = stepTime * initialPortions;\r\n\r\nconst Brewer: React.SFC<BrewerProps> = ({ recipe }) => {\r\n    const [time, setTime] = useState(0);\r\n    const [steps, setSteps] = useState(Array.from(new Array(initialPortions), (_, i) => (i + 1) / initialPortions));\r\n    const [timer, setTimer] = useState<NodeJS.Timeout>();\r\n    const [finished, setFinished] = useState(false);\r\n\r\n    const sortedSteps = steps.sort();\r\n    const marks: Mark[] = sortedSteps.map(s => ({\r\n        value: s,\r\n        label: `${(s * recipe.water).toFixed()} ml`\r\n    }));\r\n\r\n    const startTimer = () => {\r\n        setTimer(getTimer());\r\n        setFinished(false);\r\n    };\r\n\r\n    const getTimer = () =>\r\n        setInterval(() => {\r\n            setTime(time => {\r\n                //TODO: Fix empty steps issue\r\n                if (time + 1 < finishTime) {\r\n                    if ((time + 1) % stepTime === 0) sound.play();\r\n                    return time + 1;\r\n                } else {\r\n                    sound.play();\r\n                    killTimer();\r\n                    setFinished(true);\r\n                    return 0;\r\n                }\r\n            });\r\n        }, 1000);\r\n\r\n    const killTimer = () => {\r\n        setTimer(timer => {\r\n            clearInterval(timer as NodeJS.Timeout);\r\n            return undefined;\r\n        });\r\n    };\r\n\r\n    const toggleTimer = () => (!timer ? startTimer() : killTimer());\r\n\r\n    const resetTimer = () => {\r\n        if (timer) killTimer();\r\n        setTime(0);\r\n        setFinished(false);\r\n    };\r\n\r\n    const stepIndex = Math.floor(time / stepTime);\r\n\r\n    const currentStep = sortedSteps[stepIndex];\r\n    const previousStep = stepIndex ? sortedSteps[stepIndex - 1] : 0;\r\n    const isLastStep = stepIndex + 1 === sortedSteps.length;\r\n    const nextStep = !isLastStep ? sortedSteps[stepIndex + 1] : currentStep;\r\n    const currentPortion = ((currentStep - previousStep) * recipe.water).toFixed();\r\n    const nextPortion = ((nextStep - currentStep) * recipe.water).toFixed();\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Typography>Prepare {recipe.coffee.toFixed(1)} g of coffee and rinse your filter.</Typography>\r\n            <Typography>Pour water in {new Set(steps).size} steps by:</Typography>\r\n            {/* TODO: Show label with current step amount */}\r\n            <Slider\r\n                value={steps}\r\n                onChange={(_, values) => setSteps(values as number[])}\r\n                aria-labelledby=\"range-slider\"\r\n                max={1}\r\n                step={0.001}\r\n                marks={marks}\r\n            />\r\n            {/* TODO: Center button */}\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <Typography variant=\"h4\">\r\n                        {moment.unix(time).format('mm:ss')} {finished && 'Done!'}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={toggleTimer}>\r\n                        {!timer ? 'Start' : 'Pause'}\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={resetTimer}>\r\n                        Reset\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n            <LinearProgress className={classes.stepper} variant=\"determinate\" value={(time / finishTime) * 100} color=\"primary\" />\r\n            <Stepper className={classes.stepper} activeStep={stepIndex} alternativeLabel>\r\n                {marks.map((mark, index) => (\r\n                    <Step key={index}>\r\n                        <StepLabel>{mark.label}</StepLabel>\r\n                    </Step>\r\n                ))}\r\n            </Stepper>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <Card className={classes.cardLeft}>\r\n                        <CardContent>\r\n                            <Typography variant=\"h5\">Step: {stepIndex + 1}</Typography>\r\n                            <Typography variant=\"h5\">Pour: {currentPortion} ml</Typography>\r\n                            <Typography variant=\"h5\">Total: {marks[stepIndex].label}</Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Card className={classes.cardRight}>\r\n                        <CardContent>\r\n                            <Typography variant=\"h5\">Next in: {moment.unix(stepTime - (time % stepTime)).format('mm:ss')}</Typography>\r\n                            <Typography variant=\"h5\">{!isLastStep ? `Pour: ${nextPortion} ml` : 'Done!'}</Typography>\r\n                            <Typography variant=\"h5\">{!isLastStep ? `Total: ${marks[stepIndex + 1].label}` : ''}</Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Brewer;\r\n","import React, { useState } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Recipe } from './models/Recipe';\r\nimport RecipeEditor from './components/RecipeEditor';\r\nimport Brewer from './components/Brewer';\r\n\r\nconst initialCoffeeAmount = 20;\r\nconst initialWaterAmount = 300;\r\n\r\nconst App = () => {\r\n    const [recipe, setRecipe] = useState(new Recipe(initialCoffeeAmount, initialWaterAmount));\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\">\r\n            <Box marginRight={2}>\r\n                <RecipeEditor recipe={recipe} onRecipeChanged={setRecipe} />\r\n                <Brewer recipe={recipe} />\r\n            </Box>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#BB86FC'\r\n        },\r\n        secondary: {\r\n            main: '#03DAC6'\r\n        },\r\n        error: {\r\n            main: '#CF6679'\r\n        },\r\n        background: {\r\n            default: '#212121',\r\n            paper: '#424242'\r\n        },\r\n        text: {\r\n            primary: '#F5F5F5',\r\n            secondary: '#E0E0E0'\r\n        }\r\n    }\r\n});\r\n\r\nexport default theme;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n    </ThemeProvider>,\n    document.querySelector('#root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}